<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">
    <!--PyObject-->
    <Type Name="python38.dll!_object">
        <!--PyLongObject-->
        <DisplayString Condition="(void*)ob_type==(void*)&amp;python38.dll!PyLong_Type">{{{((python38.dll!_longobject*)this)->ob_digit[0]}}}</DisplayString>
        <!--PyFloatObject-->
        <DisplayString Condition="(void*)ob_type==(void*)&amp;python38.dll!PyFloat_Type">{{{((python38.dll!PyFloatObject*)this)->ob_fval}}}</DisplayString>
        <!--PyUnicodeObject-->
        <DisplayString Condition="(void*)ob_type==(void*)&amp;python38.dll!PyUnicode_Type&amp;&amp;((python38.dll!PyASCIIObject*)this)->wstr == 0">{{{(char*)(((python38.dll!PyASCIIObject*)this) + 1), s}}}</DisplayString>
        <DisplayString Condition="(void*)ob_type==(void*)&amp;python38.dll!PyUnicode_Type&amp;&amp;((python38.dll!PyASCIIObject*)this)->wstr != 0">{{{((python38.dll!PyASCIIObject*)this)->wstr}}}</DisplayString>
        <!--PyListObject-->
        <DisplayString Condition="(void*)ob_type==(void*)&amp;python38.dll!PyList_Type">{{[type] = {ob_type->tp_name,s} : [size] = {((python38.dll!PyListObject*)this)->ob_base.ob_size}}}</DisplayString>
        <!--PyTupleObject-->
        <DisplayString Condition="(void*)ob_type==(void*)&amp;python38.dll!PyTuple_Type">{{[type] = {ob_type->tp_name,s} : [size] = {((python38.dll!PyTupleObject*)this)->ob_base.ob_size}}}</DisplayString>
        <!--PyDictObject-->
        <DisplayString Condition="(void*)ob_type==(void*)&amp;python38.dll!PyDict_Type">{{[type] = {ob_type->tp_name,s} : [size] = {((python38.dll!PyDictObject*)this)->ma_used}}}</DisplayString>
        <!--PyBytesObject-->
        <DisplayString Condition="(void*)ob_type==(void*)&amp;python38.dll!PyBytes_Type">{{[type] = {ob_type->tp_name,s} : [size] = {((python38.dll!PyBytesObject*)this)->ob_base.ob_size}}}</DisplayString>
        <!--PyModuleObject-->
        <DisplayString Condition="(void*)ob_type==(void*)&amp;python38.dll!PyModule_Type">{{[type] = {ob_type->tp_name,s} : [name] = {((python38.dll!PyModuleObject*)this)->md_name}}}</DisplayString>
        <!--PyCFunctionObject-->
        <DisplayString Condition="(void*)ob_type==(void*)&amp;python38.dll!PyCFunction_Type">{{[type] = {ob_type->tp_name,s} : [name] = {((python38.dll!PyCFunctionObject*)this)->m_ml->ml_name}}}</DisplayString>
        <Expand>
            <Item Name="[type]">ob_type->tp_name,s</Item>
            <!--PyLongObject-->
            <Item Condition="(void*)ob_type==(void*)&amp;python38.dll!PyLong_Type" Name="[value]">((python38.dll!_longobject*)this)->ob_digit[0]</Item>
            <!--PyFloatObject-->
            <Item Condition="(void*)ob_type==(void*)&amp;python38.dll!PyFloat_Type" Name="[value]">((python38.dll!PyFloatObject*)this)->ob_fval</Item>
            <!--PyUnicodeObject-->
            <Item Condition="(void*)ob_type==(void*)&amp;python38.dll!PyUnicode_Type" Name="[size]">((python38.dll!PyASCIIObject*)this)->length</Item>
            <ArrayItems Condition="(void*)ob_type==(void*)&amp;python38.dll!PyUnicode_Type&amp;&amp;((python38.dll!PyASCIIObject*)this)->wstr == 0">
                <Size>((python38.dll!PyASCIIObject*)this)->length + 1</Size>
                <ValuePointer>(char*)(((python38.dll!PyASCIIObject*)this) + 1)</ValuePointer>
            </ArrayItems>
            <ArrayItems Condition="(void*)ob_type==(void*)&amp;python38.dll!PyUnicode_Type&amp;&amp;((python38.dll!PyASCIIObject*)this)->wstr != 0">
                <Size>((python38.dll!PyASCIIObject*)this)->length + 1</Size>
                <ValuePointer>((python38.dll!PyASCIIObject*)this)->wstr</ValuePointer>
            </ArrayItems>
            <!--PyListObject-->
            <Item Condition="(void*)ob_type==(void*)&amp;python38.dll!PyList_Type" Name="[size]">((python38.dll!PyListObject*)this)->ob_base.ob_size</Item>
            <ArrayItems Condition="(void*)ob_type==(void*)&amp;python38.dll!PyList_Type">
                <Size>((python38.dll!PyListObject*)this)->ob_base.ob_size</Size>
                <ValuePointer>((python38.dll!PyListObject*)this)->ob_item</ValuePointer>
            </ArrayItems>
            <!--PyTupleObject-->
            <Item Condition="(void*)ob_type==(void*)&amp;python38.dll!PyTuple_Type" Name="[size]">((python38.dll!PyTupleObject*)this)->ob_base.ob_size</Item>
            <ArrayItems Condition="(void*)ob_type==(void*)&amp;python38.dll!PyTuple_Type">
                <Size>((python38.dll!PyTupleObject*)this)->ob_base.ob_size</Size>
                <ValuePointer>((python38.dll!PyTupleObject*)this)->ob_item</ValuePointer>
            </ArrayItems>
            <!--PyDictObject-->
            <!-- <Item Condition="(void*)ob_type==(void*)&amp;python38.dll!PyDict_Type" Name="[size]">((python38.dll!PyDictObject*)this)->ma_used</Item>
            <CustomListItems Condition="(void*)ob_type==(void*)&amp;python38.dll!PyDict_Type">
                <Variable Name="entry" InitialValue="&amp;((python38.dll!PyDictObject*)this)->ma_keys->dk_entries"/>
                <Variable Name="size" InitialValue="((python38.dll!PyDictObject*)this)->ma_keys->dk_size"/>
                <Variable Name="i" InitialValue="0"/>
                <Loop>
                    <Break Condition="i>=size"/>
                    <Item Condition="entry[i]->me_key!=nullptr" Name="{entry[i]->me_key}">entry[i]->me_value</Item>
                    <Exec>i=i+1</Exec>
                </Loop>
            </CustomListItems> -->
            <Item Condition="(void*)ob_type==(void*)&amp;python38.dll!PyDict_Type" Name="[size]">((python38.dll!PyDictObject*)this)->ma_used</Item>
            <CustomListItems Condition="(void*)ob_type==(void*)&amp;python38.dll!PyDict_Type">
                <Variable Name="dk_size" InitialValue="((python38.dll!PyDictObject*)this)->ma_keys->dk_size"/>
                <Variable Name="dk_ixsize" InitialValue="dk_size &lt; 0x100 ? 1 : (dk_size &lt; 0x10000 ? 2 : 4)"/>
                <Variable Name="entry" InitialValue="(python38.dll!PyDictKeyEntry*)(((char*)((python38.dll!PyDictObject*)this)->ma_keys->dk_indices) + dk_size * dk_ixsize)"/>
                <Variable Name="size" InitialValue="((python38.dll!PyDictObject*)this)->ma_keys->dk_size"/>
                <Variable Name="i" InitialValue="0"/>
                <Item Name="[dk_size]">dk_size</Item> 
                <Item Name="[dk_ixsize]">dk_ixsize</Item> 
                <Item Name="[entry]">entry</Item> 
                <Loop>
                    <Break Condition="i>=size"/>
                    <Item Condition="entry[i].me_key!=nullptr" Name="{entry[i].me_key}">entry[i].me_value</Item>
                    <Exec>i=i+1</Exec>
                </Loop>
            </CustomListItems>
            <!--PyBytesObject-->
            <Item Condition="(void*)ob_type==(void*)&amp;python38.dll!PyBytes_Type" Name="[size]">((python38.dll!PyBytesObject*)this)->ob_base.ob_size</Item>
            <ArrayItems Condition="(void*)ob_type==(void*)&amp;python38.dll!PyBytes_Type">
                <Size>((python38.dll!PyBytesObject*)this)->ob_base.ob_size</Size>
                <ValuePointer>((python38.dll!PyBytesObject*)this)->ob_sval</ValuePointer>
            </ArrayItems>
            <!--PyModule_Type-->
            <Item Condition="(void*)ob_type==(void*)&amp;python38.dll!PyModule_Type" Name="[name]">((python38.dll!PyModuleObject*)this)->md_name</Item>
            <Item Condition="(void*)ob_type==(void*)&amp;python38.dll!PyModule_Type" Name="[__impl__]">(python38.dll!PyModuleObject*)this</Item>
            <!--PyCFunctionObject-->
            <Item Condition="(void*)ob_type==(void*)&amp;python38.dll!PyCFunction_Type" Name="[name]">((python38.dll!PyCFunctionObject*)this)->m_ml->ml_name</Item>
            <Item Condition="(void*)ob_type==(void*)&amp;python38.dll!PyCFunction_Type" Name="[method]">((python38.dll!PyCFunctionObject*)this)->m_ml->ml_meth</Item>
            <Item Condition="(void*)ob_type==(void*)&amp;python38.dll!PyCFunction_Type" Name="[__impl__]">(python38.dll!PyCFunctionObject*)this</Item>
        </Expand>
    </Type>
</AutoVisualizer>